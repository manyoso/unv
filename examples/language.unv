/*
 * To declare a type we need rules for:
 *   1) Formation rules
 *   2) Construction rules
 *   3) Destruction rules
 *   4) An optional uniqueness principle
 */

/* Universes */
universe Singleton : 0      // singleton or contractible
universe Proposition : 1    // proposition
universe Set : 2            // set

/* Spaces */
space A : universe Singleton
  formation()
  constructor()
  destructor()
  uniqueness()

/* Points */
point a : space A

/* Dependent Function Types */

/* Function Types */

/* Dependent Product Types */

/* Product Types */

/* Natural Numbers */

/* Successor functions */

/*
isSet
isSingleton
isProposition

0 empty type aka uninhabited
1 unit type
* canonical inhabitant of 1
2 type of booleans

currying of functions

monads vs side-effects
*/